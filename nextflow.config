
params {

    split_by_lc = true
    quantitative = true
    input_folder = "${projectDir}/LUCAS_Funct/"
    metadata_file = "${projectDir}/LUCAS_Funct/metadata_for_samples_2.xlsx"    
    metadata_cols = "MeanTemperature_Avg31day,PrecipitationSum_Avg31day,pH_H2O,Electrical_conductivity,Carbonate_content,Phosphorus_content,CN,Clay_content_imputed,Organic_carbon_imputed,H2O_content_volumetric_imputed,Annual_Precipitation,Annual_Mean_Temperature,Bulk_Density_0_10_cm_imputed,Bulk_Density_10_20_cm_imputed"
       
    tracedir = "pipeline_info"
    outDir = "${projectDir}/export/networks/"
}

profiles {


    // Docker-based profile
    docker {
        docker.enabled         = true
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false

        process.container = 'minigonche/community_network_analyzer:latest'

    }

    // Singularity-based profile
    singularity {
        singularity.enabled    = true
        singularity.autoMounts = true
        docker.enabled         = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false

        process.container = 'library://minigonche/networks/community_network_analyzer:latest'
        //process.container = 'file:///gpfs/space/home/felipe1/Singularity_images/minigonche-networks-community_network_analyzer-latest.img'
        //process.container = "/home/minigonche/Dropbox/Projects/TartuU/community_network_analyzer/community_network_analyzer.sif"


    }

    test { includeConfig 'conf/test.config' }

    production { includeConfig 'conf/production.config' }

}




def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.tracedir}/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.tracedir}/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.tracedir}/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.tracedir}/pipeline_dag_${trace_timestamp}.svg"
}
